#include "common.h"
import "oaidl.idl";
import "ocidl.idl";
[
   uuid(150d1b07-f871-4876-996e-53411408e079),
   version(2.1)
]

typedef GUID	RZEFFECTID;
typedef GUID	RZDEVICEID;

[
	uuid(996391a2-d79c-49cc-a425-c105f48a9a61),
	version(2.1)
]

interface rpc_retc
{
	typedef [context_handle] void* CONTEXT_HANDLE;

	//void logError(long lArraySize, [size_is(lArraySize)] char achArray[*]);
	CONTEXT_HANDLE initialize([in] handle_t hBinding);

	int playKeyboardEffect([in] int type, unsigned long lArraySize, [size_is(lArraySize)] char achArray[*], CONTEXT_HANDLE hContext);
	int playMouseEffect([in] int type, unsigned long lArraySize, [size_is(lArraySize)] char achArray[*], CONTEXT_HANDLE hContext);
	int playHeadsetEffect([in] int type, unsigned long lArraySize, [size_is(lArraySize)] char achArray[*], CONTEXT_HANDLE hContext);

	int CreateEffectGeneric(const RZDEVICEID DeviceId, DEVICE_TYPE_RETC deviceType, int effectType, unsigned long lArraySize, [size_is(lArraySize)] char achArray[*], const RZEFFECTID pEffectId, boolean storeEffect, CONTEXT_HANDLE hContext);

	int createEffectInternal([in] int type, DEVICE_TYPE_RETC deviceType, unsigned long lArraySize, [size_is(lArraySize)] char achArray[*], [in] RZEFFECTID pEffectId, CONTEXT_HANDLE hContext);
	int setEffect([in] const RZEFFECTID effID, CONTEXT_HANDLE hContext);
	int deleteEffect([in] const RZEFFECTID effID, CONTEXT_HANDLE hContext);
	void disconnect([in, out] CONTEXT_HANDLE* phContext);
}
